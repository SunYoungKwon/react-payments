{"version":3,"sources":["constants/palette.ts","constants/addCardForm.ts","constants/creditCard.ts","constants/messages.ts","components/shared/Button/styles.ts","components/shared/Button/index.tsx","components/shared/Button/IconButton.tsx","components/shared/Modal/styles.ts","components/shared/Modal/index.tsx","components/AddCardPage/modal/CardBrandModal/styles.ts","components/AddCardPage/modal/CardBrandModal/index.tsx","constants/pages.ts","firebase/firebase.ts","firebase/api.ts","hooks/useDebounceCallback.ts","components/shared/Input/index.tsx","constants/i18n.ts","utils/format.ts","components/shared/Container/index.tsx","components/shared/CreditCard/styles.ts","components/shared/CreditCard/index.tsx","components/AddCardPage/modal/NicknameModal/styles.ts","components/AddCardPage/modal/NicknameModal/index.tsx","components/AddCardPage/AddCardForm/AddCardInputContainer/index.tsx","components/AddCardPage/AddCardForm/AddCardInputLabel/styles.ts","components/AddCardPage/AddCardForm/AddCardInputLabel/index.tsx","utils/validator.ts","components/AddCardPage/AddCardForm/AddCardInput/CardNumberInput/index.tsx","components/AddCardPage/AddCardForm/validator.ts","components/shared/Icon/index.tsx","components/shared/Icon/QuestionIcon.tsx","components/AddCardPage/AddCardForm/AddCardInput/CVCInput/styles.ts","components/AddCardPage/AddCardForm/AddCardInput/CVCInput/index.tsx","components/AddCardPage/AddCardForm/AddCardInput/ExpDateInput/index.tsx","components/AddCardPage/AddCardForm/AddCardInput/OwnerNameInput/index .tsx","components/AddCardPage/AddCardForm/AddCardInput/PasswordInput/styles.ts","components/AddCardPage/AddCardForm/AddCardInput/PasswordInput/index.tsx","components/AddCardPage/AddCardForm/styles.tsx","components/AddCardPage/AddCardForm/index.tsx","components/shared/Icon/BackIcon.tsx","components/shared/Template/styles.ts","components/shared/Template/index.tsx","components/AddCardPage/index.tsx","components/CardListPage/CardList/AddCardButton/styles.ts","components/CardListPage/CardList/AddCardButton/index.tsx","components/CardListPage/CardList/styles.ts","components/CardListPage/CardList/index.tsx","components/CardListPage/index.tsx","global.styles.ts","App.tsx","index.tsx"],"names":["PALETTE","GRAY_1","GRAY_2","GRAY_3","BAEMINT","DARK_YELLOW","TRANSLUCENT_BLACK_3","TRANSLUCENT_BLACK_9","CARD","POCO","JUN","PARK","BRAN","LLOYD","FANO","COLIN","SUN","LABEL","PLACEHOLDER","CARD_BRAND","name","color","CARD_NUMBER_SEPARATOR","DEFAULT_VALUE","ALERT","bottomRight","css","IconButtonContainer","styled","div","backgroundColor","Button","button","position","IconButton","children","onClick","type","ModalContainer","ModalInner","fullType","bottomType","Modal","onClose","target","currentTarget","ButtonContainer","CardBrandModal","cardBrands","onSelect","containerRef","useRef","useEffect","current","focus","ref","tabIndex","map","brand","index","PAGE","CARD_LIST","NAME","PATH","ADD_CARD","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","fireStore","firestore","COLLECTION","fetchCards","a","cards","collection","get","forEach","querySnapshot","push","id","data","addCard","card","add","console","error","Error","useDebounceCallback","callback","wait","timer","cleanup","clearTimeout","args","setTimeout","Input","input","height","width","textCenter","underline","LOCALE","formatNumber2Digits","number","toLocaleString","minimumIntegerDigits","Container","flex","justifyContent","alignItems","mdSize","lgSize","CardNameContainer","p","IcChip","CardNumberContainer","InfoContainer","OwnerNameContainer","CreditCardContainer","cardColor","size","CreditCard","className","cardBrand","ownerName","cardNumber","expDate","splitedCardNumber","split","repeat","length","month","Number","year","NicknameContainer","form","ResultCreditCard","NicknameModal","cardInfo","nickname","setNickname","history","useHistory","debouncedOnAddCard","event","preventDefault","alert","message","onSubmit","value","onChange","onBlur","AddCardInputContainer","AddCardInputLabelContainer","label","LabelText","span","AddCardInputLabel","Array","isArray","labelText","isNumberString","isNaN","CardNumberInput","setCardNumber","secondCardNumberInputRef","thirdCardNumberInputRef","fourthCardNumberInputRef","cardNumberInputInfo","onChangeCardNumber","isValidCardNumber","nextValue","focusNextCardNumberInput","maxLength","reduce","acc","curr","array","slice","Icon","ariaLabel","viewBox","file","role","aria-label","fill","xmlns","QuestionIcon","cx","cy","r","stroke","d","QuestionMarkContainer","process","CVCInput","CVC","setCVC","isValidCVC","ExpDateInput","setExpDate","expYearInputRef","onBlurExpDate","placeholder","isValidExpMonth","isValidExpYear","OwnerNameInput","setOwnerName","test","isValidOwnerName","toUpperCase","PasswordDot","PasswordInput","password","setPassword","secondPasswordInputRef","onChangePassword","isValidPassword","nextPassword","AddCardFormCreditCard","AddCardForm","useState","setCardBrand","isCardBrandModalVisible","setIsCardBrandModalVisible","isNicknameModalVisible","setIsNicknameModalVisible","onSetCardBrand","join","every","el","isAllInputFilled","BackIcon","strokeWidth","PageContainer","Header","header","Template","title","prevPagePath","to","AddCardPage","CardButton","AddCardButton","NickName","CardListContainer","ul","CardList","setCards","responseData","CardListPage","GlobalStyle","createGlobalStyle","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f26f979d.chunk.js","sourcesContent":["const PALETTE = {\n  GRAY_1: '#ECEBF1',\n  GRAY_2: '#e5e5e5',\n  GRAY_3: '#333333',\n  BAEMINT: '#04C09E',\n  DARK_YELLOW: '#cbba64',\n  TRANSLUCENT_BLACK_3: '#00000030',\n  TRANSLUCENT_BLACK_9: '#00000090',\n  CARD: {\n    POCO: '#E24141',\n    JUN: '#547CE4',\n    PARK: '#73BC6D',\n    BRAN: '#DE59B9',\n    LLOYD: '#04C09E',\n    FANO: '#E76E9A',\n    COLIN: '#F37D3B',\n    SUN: '#FBCD58',\n  },\n};\n\nexport default PALETTE;\n","import PALETTE from './palette';\n\nexport const LABEL = {\n  CARD_NUMBER: '카드번호',\n  EXP_DATE: '만료일',\n  OWNER_NAME: '카드 소유자 이름',\n  CVC: '보안 코드(CVC/CVV)',\n  PASSWORD: '카드 비밀번호',\n};\n\nexport const PLACEHOLDER = {\n  MONTH: 'MM',\n  YEAR: 'YY',\n  OWNER_NAME: '카드에 표시된 이름과 동일하게 입력하세요.',\n};\n\nexport const CARD_BRAND = [\n  {\n    name: '포코카드',\n    color: PALETTE.CARD.POCO,\n  },\n  {\n    name: '준카드',\n    color: PALETTE.CARD.JUN,\n  },\n  {\n    name: '공원카드',\n    color: PALETTE.CARD.PARK,\n  },\n  {\n    name: '브랜카드',\n    color: PALETTE.CARD.BRAN,\n  },\n  {\n    name: '로이드카드',\n    color: PALETTE.CARD.LLOYD,\n  },\n  {\n    name: '파노카드',\n    color: PALETTE.CARD.FANO,\n  },\n  {\n    name: '콜린카드',\n    color: PALETTE.CARD.COLIN,\n  },\n  {\n    name: '썬카드',\n    color: PALETTE.CARD.SUN,\n  },\n];\n","export const EXP_DATE_WHITESPACE_CHARACTER = '0';\nexport const CARD_NUMBER_DIGITS = 4;\nexport const CARD_NUMBER_SEPARATOR = '-';\nexport const MASK_CHARACTER = '•';\n\nexport const EXP_DATE_DIGITS = 2;\n\nexport const MAX_OWNER_NAME_LENGTH = 30;\nexport const LAST_MONTH = 12;\n\nexport const CVC_DIGITS = 3;\n\nexport const DEFAULT_VALUE = {\n  MONTH: 'MM',\n  YEAR: 'YY',\n  OWNER_NAME: 'NAME',\n};\n","export const ALERT = {\n  SHOULD_FILL_REQUIRED_INPUTS: '입력이 완료되지 않았습니다.',\n  CARD_SUBMIT_SUCCESS: '카드가 등록되었습니다.',\n};\n","import styled, { css } from 'styled-components';\nimport PALETTE from '../../../constants/palette';\nimport { IconButtonProps } from './IconButton';\n\nexport const bottomRight = css`\n  position: fixed;\n  right: 4%;\n  bottom: 4%;\n`;\n\nexport const IconButtonContainer = styled.div<IconButtonProps>`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  cursor: pointer;\n  width: fit-content;\n  font-weight: 400;\n  font-size: 0.9em;\n\n  button {\n    cursor: pointer;\n    border: 0;\n    outline: none;\n    width: 3.5em;\n    height: 3.5em;\n    border-radius: 50%;\n    background-color: ${({ backgroundColor }) => backgroundColor || PALETTE.GRAY_1};\n    margin-bottom: 0.625rem;\n  }\n`;\n","import styled, { css } from 'styled-components';\nimport PALETTE from '../../../constants/palette';\nimport { bottomRight } from './styles';\n\ninterface Props {\n  color?: string;\n  position?: 'bottom-right';\n}\n\nconst Button = styled.button<Props>`\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n  padding: 0.5rem 1rem;\n  font-size: 1rem;\n  font-weight: 500;\n  color: ${({ color }) => PALETTE.BAEMINT || color};\n  ${({ position }) => position === 'bottom-right' && bottomRight}\n`;\n\nexport default Button;\n","import { MouseEvent } from 'react';\nimport { IconButtonContainer } from './styles';\n\nexport interface IconButtonProps {\n  children: React.ReactNode;\n  backgroundColor?: string;\n  onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n}\n\nexport const IconButton = ({ children, backgroundColor, onClick }: IconButtonProps) => {\n  return (\n    <IconButtonContainer onClick={onClick} backgroundColor={backgroundColor}>\n      <button type=\"button\" />\n      <span>{children}</span>\n    </IconButtonContainer>\n  );\n};\n\nexport default IconButton;\n","import styled, { css } from 'styled-components';\nimport { Props } from '.';\nimport PALETTE from '../../../constants/palette';\n\nexport const ModalContainer = styled.div`\n  display: flex;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: ${PALETTE.TRANSLUCENT_BLACK_9};\n`;\n\nexport const ModalInner = styled.div<Pick<Props, 'type'>>`\n  position: relative;\n  width: 100%;\n  background: white;\n  ${({ type }) => (type === 'full' ? fullType : bottomType)};\n`;\n\nconst bottomType = css`\n  margin-top: auto;\n  height: 16rem;\n  border-radius: 1rem 1rem 0 0;\n`;\n\nconst fullType = css`\n  height: 100vh;\n`;\n","import { MouseEvent } from 'react';\nimport { ModalContainer, ModalInner } from './styles';\n\nexport interface Props {\n  children: React.ReactNode;\n  onClose?: () => void;\n  type?: 'bottom' | 'full';\n}\n\nconst Modal = ({ children, onClose, type }: Props) => {\n  const onClickDimmed = ({ target, currentTarget }: MouseEvent<HTMLDivElement>) => {\n    if (!onClose || target !== currentTarget) return;\n\n    onClose();\n  };\n\n  return (\n    <ModalContainer onClick={onClickDimmed}>\n      <ModalInner type={type}>{children}</ModalInner>\n    </ModalContainer>\n  );\n};\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const ButtonContainer = styled.div`\n  height: 100%;\n  display: grid;\n  padding: 0 3rem;\n  grid-template-columns: repeat(4, 25%);\n  justify-content: center;\n  align-content: space-evenly;\n  justify-items: center;\n  outline: none;\n`;\n","import { useEffect, useRef } from 'react';\nimport { CardBrand } from '../../../../types';\nimport { IconButton } from '../../../shared/Button/IconButton';\nimport Modal from '../../../shared/Modal';\nimport { ButtonContainer } from './styles';\n\ninterface Props {\n  cardBrands: CardBrand[];\n  onSelect: (cardBrand: CardBrand) => void;\n  onClose: () => void;\n}\n\nconst CardBrandModal = ({ cardBrands, onSelect, onClose }: Props) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    containerRef.current?.focus();\n  }, []);\n\n  return (\n    <Modal onClose={onClose} type=\"bottom\">\n      <ButtonContainer ref={containerRef} tabIndex={0}>\n        {cardBrands.map((brand, index) => (\n          <IconButton key={index} backgroundColor={brand.color} onClick={() => onSelect(brand)}>\n            {brand.name}\n          </IconButton>\n        ))}\n      </ButtonContainer>\n    </Modal>\n  );\n};\n\nexport default CardBrandModal;\n","interface Page {\n  readonly NAME: string;\n  readonly PATH: string;\n}\n\ninterface PageRecord {\n  [key: string]: Page;\n}\n\nconst PAGE: PageRecord = {\n  CARD_LIST: {\n    NAME: '보유카드',\n    PATH: '/',\n  },\n  ADD_CARD: {\n    NAME: '카드추가',\n    PATH: '/add-card',\n  },\n};\n\nexport default PAGE;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDSvBc45mzzSXxLoTERZabtaT6lE96A1ME',\n  authDomain: 'react-payments-c696f.firebaseapp.com',\n  projectId: 'react-payments-c696f',\n  storageBucket: 'react-payments-c696f.appspot.com',\n  messagingSenderId: '723014641724',\n  appId: '1:723014641724:web:2d1d76b9ce7009d687fb39',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst fireStore = firebase.firestore();\n\nexport default fireStore;\n","import { Card } from '../types';\nimport fireStore from './firebase';\n\nconst COLLECTION = { CARDS: 'cards' };\n\nexport interface StoredCard extends Card {\n  id: string;\n}\n\nexport const fetchCards = async () => {\n  try {\n    let cards: StoredCard[] = [];\n    const docs = await fireStore.collection(COLLECTION.CARDS).get();\n\n    docs.forEach(querySnapshot =>\n      cards.push({ id: querySnapshot.id, ...(querySnapshot.data() as Card) } as StoredCard)\n    );\n\n    return cards;\n  } catch (e) {\n    return {};\n  }\n};\n\nexport const addCard = async (card: Omit<Card, 'password' | 'CVC'>) => {\n  try {\n    await fireStore.collection(COLLECTION.CARDS).add(card);\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    throw new Error('카드를 추가하지 못했습니다!');\n  }\n};\n","import { useRef } from 'react';\n\n// 참고 : https://gist.github.com/ca0v/73a31f57b397606c9813472f7493a940\nconst useDebounceCallback = <F extends (...args: any[]) => any>(callback: F, wait: number) => {\n  const timer = useRef<ReturnType<typeof setTimeout>>();\n\n  const cleanup = () => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n    }\n  };\n\n  return (...args: Parameters<F>) => {\n    cleanup();\n\n    timer.current = setTimeout(() => {\n      callback(...args);\n    }, wait);\n  };\n};\n\nexport default useDebounceCallback;\n","import styled from 'styled-components';\nimport PALETTE from '../../../constants/palette';\n\ninterface Props {\n  underline?: boolean;\n  textCenter?: boolean;\n  width?: string;\n  color?: string;\n  height?: string;\n}\n\nconst Input = styled.input<Props>`\n  height: ${({ height }) => height || `3.375rem`};\n  border: none;\n  outline: none;\n  font-size: 1.125rem;\n  color: ${({ color }) => color || PALETTE.BAEMINT};\n  background-color: transparent;\n  width: ${({ width }) => width || '100%'};\n  ${({ textCenter }) => textCenter && `text-align: center;`}\n  ${({ underline }) => underline && `border-bottom: 1px solid #737373;`}\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  &[type='number'] {\n    -moz-appearance: textfield;\n  }\n`;\n\nexport default Input;\n","export const LOCALE = {\n  KR: 'ko-KR',\n};\n","import { LOCALE } from '../constants/i18n';\n\nexport const formatNumber2Digits = (number: number) =>\n  number.toLocaleString(LOCALE.KR, {\n    minimumIntegerDigits: 2,\n  });\n","import styled from 'styled-components';\n\ninterface Props {\n  width?: string;\n  flex?: boolean;\n  justifyContent?: 'space-between' | 'center';\n  alignItems?: 'center';\n  backgroundColor?: string;\n}\n\nconst Container = styled.div<Props>`\n  border-radius: 0.5rem;\n  box-sizing: border-box;\n  width: ${({ width }) => width || '100%'};\n  ${({ flex }) => flex && `display: flex;`}\n  ${({ justifyContent }) => justifyContent && `justify-content: ${justifyContent};`}\n  ${({ alignItems }) => alignItems && `align-items: ${alignItems};`};\n  ${({ backgroundColor }) => backgroundColor && `background-color: ${backgroundColor};`};\n`;\n\nexport default Container;\n","import styled, { css } from 'styled-components';\nimport PALETTE from '../../../constants/palette';\nimport Container from '../Container';\n\ninterface CreditCardContainerProps {\n  cardColor: string;\n  size?: 'md' | 'lg';\n}\n\nexport const mdSize = css`\n  width: 16rem;\n  height: calc(16rem * 0.63);\n  font-size: 0.8rem;\n  border-radius: 6px;\n`;\n\nconst lgSize = css`\n  width: 20rem;\n  height: calc(20rem * 0.63);\n  font-size: 1rem;\n  border-radius: 7px;\n`;\n\nexport const CardNameContainer = styled.p``;\nexport const IcChip = styled.div``;\nexport const CardNumberContainer = styled.p``;\nexport const InfoContainer = styled(Container)``;\nexport const OwnerNameContainer = styled.p``;\n\nexport const CreditCardContainer = styled.div<CreditCardContainerProps>`\n  background: ${({ cardColor }) => cardColor || PALETTE.GRAY_1};\n  box-shadow: 3px 3px 5px ${PALETTE.TRANSLUCENT_BLACK_3};\n  padding: 1em;\n  box-sizing: border-box;\n  font-weight: 500;\n  ${({ size }) => (size === 'lg' ? lgSize : mdSize)}\n\n  ${CardNameContainer} {\n    margin-bottom: 2em;\n    height: 1.25em;\n  }\n\n  ${IcChip} {\n    background-color: ${PALETTE.DARK_YELLOW};\n    width: 4em;\n    height: calc(4em * 0.63);\n    border-radius: 6px;\n    margin-bottom: 0.725em;\n  }\n\n  ${CardNumberContainer} {\n    display: flex;\n    height: 2em;\n    justify-content: space-between;\n    font-size: 1.25em;\n    letter-spacing: 0.05em;\n    padding: 0 0.5em;\n    margin-bottom: 0.125em;\n\n    span {\n      width: 100%;\n      text-align: center;\n    }\n  }\n\n  ${InfoContainer} {\n    font-size: 1.125em;\n    padding: 0 0.725em;\n\n    ${OwnerNameContainer} {\n      overflow-x: hidden;\n      max-width: 10em;\n    }\n  }\n`;\n","import { CARD_NUMBER_SEPARATOR, DEFAULT_VALUE, MASK_CHARACTER } from '../../../constants/creditCard';\nimport { Card } from '../../../types';\nimport { formatNumber2Digits } from '../../../utils/format';\nimport Container from '../Container';\nimport {\n  CreditCardContainer,\n  CardNameContainer,\n  IcChip,\n  CardNumberContainer,\n  InfoContainer,\n  OwnerNameContainer,\n} from './styles';\n\ninterface Props extends Omit<Card, 'id' | 'CVC' | 'password'> {\n  className?: string;\n  size?: 'lg' | 'md';\n}\n\nconst CreditCard = ({ className, size, cardBrand, ownerName, cardNumber, expDate }: Props) => {\n  const splitedCardNumber = cardNumber.split(CARD_NUMBER_SEPARATOR);\n  const { name, color } = cardBrand;\n\n  return (\n    <CreditCardContainer className={className} size={size} cardColor={color}>\n      <CardNameContainer>{name}</CardNameContainer>\n      <IcChip />\n      <CardNumberContainer>\n        <span>{splitedCardNumber[0]}</span>\n        <span>{splitedCardNumber[1]}</span>\n        <span>{MASK_CHARACTER.repeat(splitedCardNumber[2].length)}</span>\n        <span>{MASK_CHARACTER.repeat(splitedCardNumber[3].length)}</span>\n      </CardNumberContainer>\n      <InfoContainer flex justifyContent=\"space-between\">\n        <OwnerNameContainer>{ownerName || DEFAULT_VALUE.OWNER_NAME}</OwnerNameContainer>\n        <p>\n          {expDate.month ? formatNumber2Digits(Number(expDate.month)) : DEFAULT_VALUE.MONTH} /{' '}\n          {expDate.year ? formatNumber2Digits(Number(expDate.year)) : DEFAULT_VALUE.YEAR}\n        </p>\n      </InfoContainer>\n    </CreditCardContainer>\n  );\n};\n\nexport default CreditCard;\n","import styled from 'styled-components';\nimport CreditCard from '../../../shared/CreditCard';\n\nexport const NicknameContainer = styled.form`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  header {\n    font-size: 1.25rem;\n    margin-bottom: 5rem;\n  }\n`;\n\nexport const ResultCreditCard = styled(CreditCard)`\n  margin-bottom: 2.5rem;\n`;\n","import { ChangeEvent, FormEvent, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { ALERT } from '../../../../constants/messages';\nimport PAGE from '../../../../constants/pages';\nimport { addCard } from '../../../../firebase/api';\nimport useDebounceCallback from '../../../../hooks/useDebounceCallback';\nimport { Card } from '../../../../types';\nimport Button from '../../../shared/Button';\nimport Input from '../../../shared/Input';\nimport Modal from '../../../shared/Modal';\nimport { NicknameContainer, ResultCreditCard } from './styles';\n\ninterface Props {\n  cardInfo: Card;\n  nickname: string;\n  setNickname: (nickname: string) => void;\n}\n\nconst NicknameModal = ({ cardInfo, nickname, setNickname }: Props) => {\n  useEffect(() => {\n    setNickname(cardInfo.cardBrand.name);\n  }, []);\n\n  const onChangeNickname = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => setNickname(value);\n  const history = useHistory();\n\n  const onBlurNickname = () => {\n    if (nickname !== '') return;\n\n    setNickname(cardInfo.cardBrand.name);\n  };\n\n  const onAddCard = async (event: FormEvent) => {\n    event.preventDefault();\n\n    try {\n      await addCard({ ...cardInfo, nickname });\n      alert(ALERT.CARD_SUBMIT_SUCCESS);\n      history.push(PAGE.CARD_LIST.PATH);\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  const debouncedOnAddCard = useDebounceCallback(onAddCard, 500);\n\n  return (\n    <Modal type=\"full\">\n      <NicknameContainer onSubmit={debouncedOnAddCard}>\n        <header>카드등록이 완료되었습니다.</header>\n        <ResultCreditCard\n          cardBrand={cardInfo.cardBrand}\n          cardNumber={cardInfo.cardNumber}\n          expDate={cardInfo.expDate}\n          ownerName={cardInfo.ownerName}\n          size=\"lg\"\n        />\n        <Input\n          color=\"black\"\n          value={nickname}\n          onChange={onChangeNickname}\n          onBlur={onBlurNickname}\n          underline\n          textCenter\n          width=\"60%\"\n          height=\"2rem\"\n        />\n\n        <Button type=\"submit\" position=\"bottom-right\">\n          확인\n        </Button>\n      </NicknameContainer>\n    </Modal>\n  );\n};\n\nexport default NicknameModal;\n","import React from 'react';\nimport PALETTE from '../../../../constants/palette';\nimport Container from '../../../shared/Container';\n\ninterface Props {\n  children: React.ReactNode;\n  width?: string;\n  backgroundColor?: string;\n}\n\nexport const AddCardInputContainer = ({ children, width, backgroundColor }: Props) => (\n  <Container\n    flex\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    backgroundColor={backgroundColor || PALETTE.GRAY_1}\n    width={width}\n  >\n    {children}\n  </Container>\n);\n\nexport default AddCardInputContainer;\n","import styled from 'styled-components';\n\ninterface Props {\n  width?: string;\n}\n\nexport const AddCardInputLabelContainer = styled.label<Props>`\n  display: block;\n  margin-bottom: 1.5rem;\n  ${({ width }) => width && `width: ${width};`}\n`;\n\nexport const LabelText = styled.span`\n  font-size: 0.875rem;\n  display: block;\n  margin-bottom: 0.5rem;\n`;\n","import Container from '../../../shared/Container';\nimport { AddCardInputLabelContainer, LabelText } from './styles';\n\ninterface Props {\n  children: React.ReactNode;\n  label: string | string[];\n  width?: string;\n}\n\nconst AddCardInputLabel = ({ children, label, width }: Props) => {\n  return (\n    <AddCardInputLabelContainer width={width}>\n      {Array.isArray(label) ? (\n        <Container flex justifyContent=\"space-between\">\n          {label.map((labelText, index) => (\n            <LabelText key={index}>{labelText}</LabelText>\n          ))}\n        </Container>\n      ) : (\n        <LabelText>{label}</LabelText>\n      )}\n      <Container flex>{children}</Container>\n    </AddCardInputLabelContainer>\n  );\n};\n\nexport default AddCardInputLabel;\n","export const isNumberString = (value: string) => !isNaN(Number(value));\n","import { ChangeEvent, Dispatch, SetStateAction, useRef } from 'react';\nimport { LABEL } from '../../../../../constants/addCardForm';\nimport { CARD_NUMBER_DIGITS, CARD_NUMBER_SEPARATOR } from '../../../../../constants/creditCard';\nimport { CardNumberState } from '../../../../../types';\nimport Input from '../../../../shared/Input';\nimport AddCardInputContainer from '../../AddCardInputContainer';\nimport AddCardInputLabel from '../../AddCardInputLabel';\nimport { isValidCardNumber } from '../../validator';\n\ninterface Props {\n  cardNumber: CardNumberState;\n  setCardNumber: Dispatch<SetStateAction<CardNumberState>>;\n}\n\nconst CardNumberInput = ({ cardNumber, setCardNumber }: Props) => {\n  const secondCardNumberInputRef = useRef<HTMLInputElement>(null);\n  const thirdCardNumberInputRef = useRef<HTMLInputElement>(null);\n  const fourthCardNumberInputRef = useRef<HTMLInputElement>(null);\n\n  const cardNumberInputInfo = [\n    { type: 'text', ref: null },\n    { type: 'text', ref: secondCardNumberInputRef },\n    { type: 'password', ref: thirdCardNumberInputRef },\n    { type: 'password', ref: fourthCardNumberInputRef },\n  ];\n\n  const createCardNumberInput = () =>\n    cardNumberInputInfo\n      .map(({ type, ref }, index) => (\n        <Input\n          key={index}\n          type={type}\n          ref={ref}\n          textCenter\n          maxLength={CARD_NUMBER_DIGITS}\n          width=\"16%\"\n          value={cardNumber[index]}\n          onChange={event => onChangeCardNumber(event, index)}\n        />\n      ))\n      .reduce(\n        (acc: JSX.Element[], curr: JSX.Element, index, array: JSX.Element[]) => [\n          ...acc,\n          <span key={index + array.length}>{CARD_NUMBER_SEPARATOR}</span>,\n          curr,\n        ],\n        []\n      )\n      .slice(1);\n\n  const onChangeCardNumber = ({ target: { value } }: ChangeEvent<HTMLInputElement>, index: number) => {\n    if (!isValidCardNumber(value)) return;\n\n    const nextValue: CardNumberState = [...cardNumber];\n\n    nextValue[index] = value;\n    setCardNumber(nextValue);\n\n    if (nextValue[index].length === CARD_NUMBER_DIGITS && index < 3) {\n      focusNextCardNumberInput(index);\n    }\n  };\n\n  const focusNextCardNumberInput = (index: number) => {\n    const cardNumberInputRefs = [secondCardNumberInputRef, thirdCardNumberInputRef, fourthCardNumberInputRef];\n\n    cardNumberInputRefs[index].current?.focus();\n  };\n\n  return (\n    <AddCardInputLabel label={LABEL.CARD_NUMBER}>\n      <AddCardInputContainer>{createCardNumberInput()}</AddCardInputContainer>\n    </AddCardInputLabel>\n  );\n};\n\nexport default CardNumberInput;\n","import {\n  CARD_NUMBER_DIGITS,\n  CVC_DIGITS,\n  EXP_DATE_DIGITS,\n  LAST_MONTH,\n  MAX_OWNER_NAME_LENGTH,\n} from '../../../constants/creditCard';\nimport { Card, CardNumberState, PasswordState } from '../../../types';\nimport { isNumberString } from '../../../utils/validator';\n\ninterface isAllInputFilledParamType extends Omit<Card, 'cardNumber' | 'password'> {\n  cardNumber: CardNumberState;\n  password: PasswordState;\n}\n\nexport const isAllInputFilled = ({\n  cardNumber,\n  cardBrand,\n  CVC,\n  expDate,\n  ownerName,\n  password,\n}: isAllInputFilledParamType) =>\n  cardNumber.every(el => el.length === CARD_NUMBER_DIGITS) &&\n  cardBrand.name &&\n  cardBrand.color &&\n  expDate.month.length === EXP_DATE_DIGITS &&\n  expDate.year.length === EXP_DATE_DIGITS &&\n  CVC.length === CVC_DIGITS &&\n  password[0].length === 1 &&\n  password[1].length === 1 &&\n  ownerName.length > 0;\n\nexport const isValidCardNumber = (value: string) => isNumberString(value) && value.length <= CARD_NUMBER_DIGITS;\n\nexport const isValidExpMonth = (value: string) =>\n  isNumberString(value) && value.length <= EXP_DATE_DIGITS && Number(value) <= LAST_MONTH;\n\nexport const isValidExpYear = (value: string) => isNumberString(value) && value.length <= EXP_DATE_DIGITS;\n\nexport const isValidOwnerName = (value: string) => value.length <= MAX_OWNER_NAME_LENGTH && !/[^a-zA-Z\\s]/g.test(value);\n\nexport const isValidCVC = (value: string) => isNumberString(value) && value.length <= CVC_DIGITS;\n\nexport const isValidPassword = (value: string) => isNumberString(value) && value.length <= 1;\n","interface Props {\n  children: React.ReactNode;\n  ariaLabel: string;\n  width: string;\n  height: string;\n  viewBox: string;\n  file?: string;\n}\n\nconst Icon = ({ children, ariaLabel, width, height, viewBox, file }: Props) => {\n  return (\n    <svg\n      role=\"img\"\n      aria-label={ariaLabel}\n      width={width}\n      height={height}\n      viewBox={viewBox}\n      fill={file || 'none'}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      {children}\n    </svg>\n  );\n};\n\nexport default Icon;\n","import Icon from '.';\n\nconst QuestionIcon = () => {\n  return (\n    <Icon ariaLabel=\"도움말\" width=\"27\" height=\"27\" viewBox=\"0 0 27 27\">\n      <circle cx=\"13.5\" cy=\"13.5\" r=\"13\" fill=\"white\" stroke=\"#BABABA\" />\n      <path\n        d=\"M12.5547 16.8203C12.5547 15.9544 12.6621 15.2643 12.877 14.75C13.0918 14.2357 13.515 13.6725 14.1465 13.0605C14.7845 12.4421 15.1882 12.0026 15.3574 11.7422C15.6178 11.3451 15.748 10.9154 15.748 10.4531C15.748 9.84115 15.5951 9.37565 15.2891 9.05664C14.9896 8.73112 14.5469 8.56836 13.9609 8.56836C13.401 8.56836 12.9486 8.72786 12.6035 9.04688C12.265 9.35938 12.0957 9.78581 12.0957 10.3262H9.72266C9.73568 9.17383 10.1263 8.26237 10.8945 7.5918C11.6693 6.92122 12.6914 6.58594 13.9609 6.58594C15.2695 6.58594 16.2884 6.91797 17.0176 7.58203C17.7533 8.24609 18.1211 9.17383 18.1211 10.3652C18.1211 11.4264 17.6263 12.4714 16.6367 13.5L15.4355 14.6816C15.0059 15.1699 14.7845 15.8828 14.7715 16.8203H12.5547ZM12.3887 19.8574C12.3887 19.4733 12.5091 19.1641 12.75 18.9297C12.9909 18.6888 13.3164 18.5684 13.7266 18.5684C14.1432 18.5684 14.472 18.6921 14.7129 18.9395C14.9538 19.1803 15.0742 19.4863 15.0742 19.8574C15.0742 20.2155 14.957 20.515 14.7227 20.7559C14.4883 20.9967 14.1562 21.1172 13.7266 21.1172C13.2969 21.1172 12.9648 20.9967 12.7305 20.7559C12.5026 20.515 12.3887 20.2155 12.3887 19.8574Z\"\n        fill=\"#969696\"\n      />\n    </Icon>\n  );\n};\n\nexport default QuestionIcon;\n","import styled from 'styled-components';\n\nexport const QuestionMarkContainer = styled.div`\n  width: fit-content;\n  height: fit-content;\n  position: relative;\n  display: flex;\n  align-items: center;\n  margin: auto 0 auto 1rem;\n  cursor: pointer;\n\n  &:hover::after {\n    content: '';\n    position: absolute;\n    display: block;\n    width: 10rem;\n    height: 10rem;\n    left: 2.5rem;\n    top: -2.5rem;\n    background: url(${process.env.PUBLIC_URL + '/images/example.png'}) no-repeat;\n  }\n`;\n","import { ChangeEvent, Dispatch, SetStateAction } from 'react';\nimport { LABEL } from '../../../../../constants/addCardForm';\nimport { CVC_DIGITS } from '../../../../../constants/creditCard';\nimport QuestionIcon from '../../../../shared/Icon/QuestionIcon';\nimport Input from '../../../../shared/Input';\nimport AddCardInputContainer from '../../AddCardInputContainer';\nimport AddCardInputLabel from '../../AddCardInputLabel';\nimport { isValidCVC } from '../../validator';\nimport { QuestionMarkContainer } from './styles';\n\ninterface Props {\n  CVC: string;\n  setCVC: Dispatch<SetStateAction<string>>;\n}\n\nconst CVCInput = ({ CVC, setCVC }: Props) => {\n  const onChangeCVC = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n    if (!isValidCVC(value)) return;\n\n    setCVC(value);\n  };\n\n  return (\n    <AddCardInputLabel label={LABEL.CVC}>\n      <AddCardInputContainer width=\"25%\">\n        <Input type=\"password\" maxLength={CVC_DIGITS} textCenter value={CVC} onChange={onChangeCVC} />\n      </AddCardInputContainer>\n      <QuestionMarkContainer>\n        <QuestionIcon />\n      </QuestionMarkContainer>\n    </AddCardInputLabel>\n  );\n};\n\nexport default CVCInput;\n","import { ChangeEvent, Dispatch, FocusEvent, SetStateAction, useRef } from 'react';\nimport { LABEL, PLACEHOLDER } from '../../../../../constants/addCardForm';\nimport { EXP_DATE_DIGITS, EXP_DATE_WHITESPACE_CHARACTER } from '../../../../../constants/creditCard';\nimport { ExpDate } from '../../../../../types';\nimport Input from '../../../../shared/Input';\nimport AddCardInputContainer from '../../AddCardInputContainer';\nimport AddCardInputLabel from '../../AddCardInputLabel';\nimport { isValidExpMonth, isValidExpYear } from '../../validator';\n\ninterface Props {\n  expDate: ExpDate;\n  setExpDate: Dispatch<SetStateAction<ExpDate>>;\n}\n\nconst ExpDateInput = ({ expDate, setExpDate }: Props) => {\n  const expYearInputRef = useRef<HTMLInputElement>(null);\n\n  const onChangeExpMonth = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n    if (!isValidExpMonth(value)) return;\n\n    setExpDate({ ...expDate, month: value });\n\n    if (value.length === EXP_DATE_DIGITS) {\n      expYearInputRef.current?.focus();\n    }\n  };\n\n  const onChangeExpYear = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n    if (!isValidExpYear(value)) return;\n\n    setExpDate({ ...expDate, year: value });\n  };\n\n  const onBlurExpDate = ({ target: { value } }: FocusEvent<HTMLInputElement>, index: keyof ExpDate) => {\n    if (value.length !== 1) return;\n\n    setExpDate({ ...expDate, [index]: EXP_DATE_WHITESPACE_CHARACTER + value });\n  };\n\n  return (\n    <AddCardInputLabel label={LABEL.EXP_DATE} width=\"40%\">\n      <AddCardInputContainer>\n        <Input\n          type=\"text\"\n          placeholder={PLACEHOLDER.MONTH}\n          textCenter\n          maxLength={EXP_DATE_DIGITS}\n          width=\"40%\"\n          value={expDate.month}\n          onChange={onChangeExpMonth}\n          onBlur={event => onBlurExpDate(event, 'month')}\n        />\n        /\n        <Input\n          type=\"text\"\n          ref={expYearInputRef}\n          placeholder={PLACEHOLDER.YEAR}\n          textCenter\n          maxLength={EXP_DATE_DIGITS}\n          width=\"40%\"\n          value={expDate.year}\n          onChange={onChangeExpYear}\n          onBlur={event => onBlurExpDate(event, 'year')}\n        />\n      </AddCardInputContainer>\n    </AddCardInputLabel>\n  );\n};\n\nexport default ExpDateInput;\n","import { ChangeEvent, Dispatch, SetStateAction } from 'react';\nimport { LABEL, PLACEHOLDER } from '../../../../../constants/addCardForm';\nimport { MAX_OWNER_NAME_LENGTH } from '../../../../../constants/creditCard';\nimport Input from '../../../../shared/Input';\nimport AddCardInputContainer from '../../AddCardInputContainer';\nimport AddCardInputLabel from '../../AddCardInputLabel';\nimport { isValidOwnerName } from '../../validator';\n\ninterface Props {\n  ownerName: string;\n  setOwnerName: Dispatch<SetStateAction<string>>;\n}\n\nconst OwnerNameInput = ({ ownerName, setOwnerName }: Props) => {\n  const onChangeOwnerName = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n    if (!isValidOwnerName(value)) return;\n\n    setOwnerName(value.toUpperCase());\n  };\n\n  return (\n    <AddCardInputLabel label={[LABEL.OWNER_NAME, `${ownerName.length} / ${MAX_OWNER_NAME_LENGTH}`]}>\n      <AddCardInputContainer>\n        <Input\n          placeholder={PLACEHOLDER.OWNER_NAME}\n          type=\"text\"\n          width=\"90%\"\n          maxLength={MAX_OWNER_NAME_LENGTH}\n          value={ownerName}\n          onChange={onChangeOwnerName}\n        />\n      </AddCardInputContainer>\n    </AddCardInputLabel>\n  );\n};\n\nexport default OwnerNameInput;\n","import styled from 'styled-components';\nimport PALETTE from '../../../../../constants/palette';\n\nexport const PasswordDot = styled.span`\n  &::after {\n    content: '';\n    width: 0.375em;\n    height: 0.375em;\n    display: block;\n    border-radius: 50%;\n    background-color: ${PALETTE.BAEMINT};\n  }\n`;\n","import { ChangeEvent, Dispatch, SetStateAction, useRef } from 'react';\nimport { LABEL } from '../../../../../constants/addCardForm';\nimport { PasswordState } from '../../../../../types';\nimport Container from '../../../../shared/Container';\nimport Input from '../../../../shared/Input';\nimport AddCardInputContainer from '../../AddCardInputContainer';\nimport AddCardInputLabel from '../../AddCardInputLabel';\nimport { isValidPassword } from '../../validator';\nimport { PasswordDot } from './styles';\n\ninterface Props {\n  password: PasswordState;\n  setPassword: Dispatch<SetStateAction<PasswordState>>;\n}\n\nconst PasswordInput = ({ password, setPassword }: Props) => {\n  const secondPasswordInputRef = useRef<HTMLInputElement>(null);\n\n  const onChangePassword = ({ target: { value } }: ChangeEvent<HTMLInputElement>, index: 0 | 1) => {\n    if (!isValidPassword(value)) return;\n\n    const nextPassword: PasswordState = [...password];\n\n    nextPassword[index as number] = value;\n    setPassword(nextPassword);\n\n    if (index === 0 && value.length === 1) {\n      secondPasswordInputRef.current?.focus();\n    }\n  };\n\n  return (\n    <AddCardInputLabel label={LABEL.PASSWORD}>\n      <Container flex justifyContent=\"space-between\" width=\"60%\">\n        <AddCardInputContainer width=\"23%\">\n          <Input type=\"password\" textCenter value={password[0]} onChange={event => onChangePassword(event, 0)} />\n        </AddCardInputContainer>\n        <AddCardInputContainer width=\"23%\">\n          <Input\n            type=\"password\"\n            ref={secondPasswordInputRef}\n            textCenter\n            value={password[1]}\n            onChange={event => onChangePassword(event, 1)}\n          />\n        </AddCardInputContainer>\n        <AddCardInputContainer width=\"23%\" backgroundColor={'transparent'}>\n          <PasswordDot />\n        </AddCardInputContainer>\n        <AddCardInputContainer width=\"23%\" backgroundColor={'transparent'}>\n          <PasswordDot />\n        </AddCardInputContainer>\n      </Container>\n    </AddCardInputLabel>\n  );\n};\n\nexport default PasswordInput;\n","import styled from 'styled-components';\nimport PALETTE from '../../../constants/palette';\nimport CreditCard from '../../shared/CreditCard';\n\nexport const AddCardFormCreditCard = styled(CreditCard)`\n  margin: 3rem auto 2rem;\n`;\n","import { FormEvent, useEffect, useState } from 'react';\nimport { CARD_BRAND } from '../../../constants/addCardForm';\nimport { CARD_NUMBER_DIGITS, CARD_NUMBER_SEPARATOR } from '../../../constants/creditCard';\nimport { ALERT } from '../../../constants/messages';\nimport { CardBrand, CardNumberState, ExpDate, PasswordState } from '../../../types';\nimport Button from '../../shared/Button';\nimport CardBrandModal from '../modal/CardBrandModal';\nimport NicknameModal from '../modal/NicknameModal';\nimport CardNumberInput from './AddCardInput/CardNumberInput';\nimport CVCInput from './AddCardInput/CVCInput';\nimport ExpDateInput from './AddCardInput/ExpDateInput';\nimport OwnerNameInput from './AddCardInput/OwnerNameInput/index ';\nimport PasswordInput from './AddCardInput/PasswordInput';\nimport { AddCardFormCreditCard } from './styles';\nimport { isAllInputFilled } from './validator';\n\nconst AddCardForm = () => {\n  const [cardBrand, setCardBrand] = useState<CardBrand>({ name: '', color: '' });\n  const [cardNumber, setCardNumber] = useState<CardNumberState>(['', '', '', '']);\n  const [expDate, setExpDate] = useState<ExpDate>({ year: '', month: '' });\n  const [password, setPassword] = useState<PasswordState>(['', '']);\n  const [ownerName, setOwnerName] = useState<string>('');\n  const [nickname, setNickname] = useState<string>('');\n  const [CVC, setCVC] = useState<string>('');\n  const [isCardBrandModalVisible, setIsCardBrandModalVisible] = useState<boolean>(false);\n  const [isNicknameModalVisible, setIsNicknameModalVisible] = useState<boolean>(false);\n\n  const onSelectCardBrand = (cardBrand: CardBrand) => {\n    setCardBrand(cardBrand);\n    setIsCardBrandModalVisible(false);\n  };\n\n  const onSetCardBrand = () => {\n    if (cardNumber[0].length !== CARD_NUMBER_DIGITS || cardNumber[1].length !== CARD_NUMBER_DIGITS) {\n      setCardBrand({ name: '', color: '' });\n      return;\n    }\n\n    const cardBrand = CARD_BRAND[Number(cardNumber[1][3])];\n\n    if (!cardBrand) {\n      setIsCardBrandModalVisible(true);\n      return;\n    }\n\n    setCardBrand(cardBrand);\n  };\n\n  useEffect(() => {\n    onSetCardBrand();\n  }, [cardNumber[0], cardNumber[1]]);\n\n  const onClickNextButton = () => {\n    if (\n      cardNumber[0].length === CARD_NUMBER_DIGITS &&\n      cardNumber[1].length === CARD_NUMBER_DIGITS &&\n      cardBrand.name === ''\n    ) {\n      onSetCardBrand();\n      return;\n    }\n\n    if (!isAllInputFilled({ cardNumber, cardBrand, CVC, expDate, ownerName, password })) {\n      alert(ALERT.SHOULD_FILL_REQUIRED_INPUTS);\n      return;\n    }\n\n    setIsNicknameModalVisible(true);\n  };\n\n  const onSubmitCard = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    alert(ALERT.CARD_SUBMIT_SUCCESS);\n  };\n\n  return (\n    <div>\n      <AddCardFormCreditCard\n        cardBrand={cardBrand}\n        expDate={expDate}\n        ownerName={ownerName}\n        cardNumber={cardNumber.join(CARD_NUMBER_SEPARATOR)}\n      />\n\n      <form onSubmit={onSubmitCard}>\n        <CardNumberInput cardNumber={cardNumber} setCardNumber={setCardNumber} />\n        <ExpDateInput expDate={expDate} setExpDate={setExpDate} />\n        <OwnerNameInput ownerName={ownerName} setOwnerName={setOwnerName} />\n        <CVCInput CVC={CVC} setCVC={setCVC} />\n        <PasswordInput password={password} setPassword={setPassword} />\n\n        <Button type=\"button\" position=\"bottom-right\" onClick={onClickNextButton}>\n          다음\n        </Button>\n\n        {isCardBrandModalVisible && (\n          <CardBrandModal\n            cardBrands={CARD_BRAND}\n            onSelect={onSelectCardBrand}\n            onClose={() => setIsCardBrandModalVisible(false)}\n          />\n        )}\n      </form>\n\n      {isNicknameModalVisible && (\n        <NicknameModal\n          cardInfo={{\n            cardBrand,\n            cardNumber: cardNumber.join(CARD_NUMBER_SEPARATOR),\n            expDate,\n            ownerName,\n            password: password.join(''),\n            CVC,\n          }}\n          nickname={nickname}\n          setNickname={setNickname}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AddCardForm;\n","import Icon from '.';\n\nconst BackIcon = () => {\n  return (\n    <Icon ariaLabel=\"뒤로가기\" width=\"17\" height=\"17\" viewBox=\"0 0 17 17\">\n      <path d=\"M8.30426 1L1.36476 8.78658L9.15134 15.7261\" stroke=\"#525252\" strokeWidth=\"1.5\" />\n    </Icon>\n  );\n};\n\nexport default BackIcon;\n","import styled from 'styled-components';\n\nexport const PageContainer = styled.div`\n  padding: 1rem 1.125rem;\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n\n  a {\n    display: flex;\n    align-items: center;\n    margin-right: 0.25rem;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport BackIcon from '../../shared/Icon/BackIcon';\nimport { Header, PageContainer } from './styles';\n\ninterface Props {\n  children: React.ReactNode;\n  title: string;\n  prevPagePath?: string;\n}\n\nconst Template = ({ children, title, prevPagePath }: Props) => {\n  return (\n    <PageContainer>\n      <Header>\n        {prevPagePath && (\n          <Link to={prevPagePath}>\n            <BackIcon />\n          </Link>\n        )}\n        <span>{title}</span>\n      </Header>\n      {children}\n    </PageContainer>\n  );\n};\n\nexport default Template;\n","import AddCardForm from './AddCardForm';\nimport Template from '../shared/Template';\nimport PAGE from '../../constants/pages';\n\nconst AddCardPage = () => {\n  return (\n    <Template title={PAGE.ADD_CARD.NAME} prevPagePath={PAGE.CARD_LIST.PATH}>\n      <AddCardForm />\n    </Template>\n  );\n};\n\nexport default AddCardPage;\n","import styled from 'styled-components';\nimport PALETTE from '../../../../constants/palette';\nimport { mdSize } from '../../../shared/CreditCard/styles';\n\nexport const CardButton = styled.button`\n  ${mdSize}\n  background-color: ${PALETTE.GRAY_2};\n  font-size: 3rem;\n  font-weight: 500;\n  border: none;\n`;\n","import { CardButton } from './styles';\n\nconst AddCardButton = () => {\n  return <CardButton>+</CardButton>;\n};\n\nexport default AddCardButton;\n","import styled from 'styled-components';\n\nexport const NickName = styled.span``;\n\nexport const CardListContainer = styled.ul`\n  height: 75vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  list-style: none;\n  margin-top: 4rem;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n  li {\n    margin-bottom: 4.25rem;\n    position: relative;\n\n    ${NickName} {\n      position: absolute;\n      left: 50%;\n      bottom: -2rem;\n      transform: translateX(-50%);\n      font-weight: 500;\n    }\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PAGE from '../../../constants/pages';\nimport { fetchCards, StoredCard } from '../../../firebase/api';\nimport CreditCard from '../../shared/CreditCard';\nimport AddCardButton from './AddCardButton';\nimport { CardListContainer, NickName } from './styles';\n\nconst CardList = () => {\n  const [cards, setCards] = useState<StoredCard[]>([]);\n\n  useEffect(() => {\n    (async () => {\n      const responseData = await fetchCards();\n      setCards(responseData as StoredCard[]);\n    })();\n  }, []);\n\n  return (\n    <CardListContainer>\n      {cards.map(card => (\n        <li key={card.id}>\n          <CreditCard\n            cardBrand={card.cardBrand}\n            ownerName={card.ownerName}\n            cardNumber={card.cardNumber}\n            expDate={card.expDate}\n            nickname={card.nickname}\n          />\n          <NickName>{card?.nickname}</NickName>\n        </li>\n      ))}\n      <li>\n        <Link to={PAGE.ADD_CARD.PATH}>\n          <AddCardButton />\n        </Link>\n      </li>\n    </CardListContainer>\n  );\n};\n\nexport default CardList;\n","import PAGE from '../../constants/pages';\nimport Template from '../shared/Template';\n\nimport CardList from './CardList';\n\nconst CardListPage = () => {\n  return (\n    <Template title={PAGE.CARD_LIST.NAME}>\n      <CardList />\n    </Template>\n  );\n};\n\nexport default CardListPage;\n","import { createGlobalStyle } from 'styled-components';\nimport PALETTE from './constants/palette';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    user-select: none;\n    font-family:  sans-serif;\n    color: ${PALETTE.GRAY_3};\n    padding: 0;\n    margin: 0;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport AddCardPage from './components/AddCardPage';\nimport CardListPage from './components/CardListPage';\nimport PAGE from './constants/pages';\nimport GlobalStyle from './global.styles';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <GlobalStyle />\n      <Switch>\n        <Route path={PAGE.CARD_LIST.PATH} component={CardListPage} exact />\n        <Route path={PAGE.ADD_CARD.PATH} component={AddCardPage} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}